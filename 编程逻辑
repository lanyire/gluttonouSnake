1.我们需要一个构造方块的的方法，因为我们希望输入的是坐标和类名就可以获得相应的方块，方块的内容可能是失误，可能是蛇头，也可能是蛇身，并且一个
方块占据20*20的像素，明显与我们直接输入的坐标存在倍数关系，所以我们创建了一个方块的构造函数Square，当我们输入坐标跟类名之后，它就可以自动转
换为页面上的方块元素，并根据类名判断出此时的方块内容是蛇头还是蛇身或者食物。并以这个构造函数为原型，之后的方法都是在这个函数的原型链上编程，
就直接解决了继承的问题，但随之而来的就是会导致this的指向变得更为复杂

2.我们还需要一个构造蛇的方法，这里的蛇本质上就是一串方块的集合，具有蛇头、蛇身、蛇尾以及前进方向这4个属性，在这里我们已经建好了构造方块的方
法，通过传参给Square就可以创建出相应的蛇头、蛇身以及蛇尾

3.蛇在前进过程中必然发生以下四件事之一，一是碰到墙壁，二是碰到自身，三是吃到食物，四是继续前进，因为蛇身是跟着蛇头移动的，其实也就是蛇身1经过
的路径就是蛇头前一刻经过的路径，蛇身2、3...蛇尾以此类推，换言之，蛇身以及蛇尾只是在重复蛇头之前发生的事件，那么我们可以认为接下来发生四件事的
哪一件其实仅取决于蛇头，所以可以用蛇头下一个位置来进行事件判定
   1）我们在上面用pos存储了蛇身上的每一个方块的信息，将这个方块数列的坐标与蛇头下一位置的坐标逐一比较，如果相同表示蛇撞到了自身，那么应该进行
   “死”事件
   2）如果下个点的位子坐标的横坐标或者纵坐标超过了边界值，就说明此时蛇头撞到了围墙，那么应该进行“死”事件
   3）如果食物存在且食物的坐标与蛇头下一个点的坐标相同，表示蛇头碰到了食物，那么应该进行“吃”事件
   4)由于四个事件互斥，同一时刻必然只发生四个事件中的其中一个，所以当上面三个事件都不发生时，蛇必然发生的是“走”事件

4.在蛇的构造函数Snake的原型链上定义一个strategies对象，这个对象包含move/eat/die三个函数，对应上面蛇头前进过程可能发生的四个事件

5.蛇前进的过程蛇身的变化其实可以看做是两个过程
   1）单纯前进，没有吃到食物，那么其实发生的就是：添加一个新蛇头-添加蛇身1并显示在旧蛇头的位置-删除蛇尾，依据最新关系更改蛇内部链表
   2）吃到食物，那么发生的就是：添加一个新蛇头-添加蛇身1并显示在旧蛇头的位置，依据最新关系更改蛇内部链表
